version: '3'

services:
    poll:
        build: ./poll
        command: python app.py
        ports:
            - '5000:80'
        networks:
            - poll-tier
        depends_on:
            - redis
        environment:
            REDISH: redis
            FLASK_APP: app.py
            FLASK_RUN_HOST: 0.0.0.0
        restart: always
    worker:
        build:
            context: ./worker
        networks:
            - back-tier
        depends_on:
            - redis
            - db
        environment:
            REDISW: redis
            DBW: db
        restart: always
    result:
        build: ./result
        command: node server.js
        environment:
            PORT: 80
        ports:
            - "5001:80"
        networks:
            - result-tier
        depends_on:
            - db
        restart: always
  
    db:
        image: 'postgres:latest'
        container_name: db
        volumes:
        - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
        - db-data:/var/lib/postgresql/data
        
        redis:
        image: 'redis'
        container_name: redis
        ports: ["6379"]
        networks:
            - poll-tier
            - back-tier
        restart: always
        environment:
            POSTGRES_USER: "postgres"
            POSTGRES_PASSWORD: "password"
        networks:
            - result-tier
            - back-tier
        restart: always
networks:
    poll-tier:
        driver: bridge
    result-tier:
        driver: bridge
    back-tier:
        driver: bridge

volumes:
    db-data:
